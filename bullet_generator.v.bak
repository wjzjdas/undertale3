module bullet_generator(
    input CLOCK_50,
    input resetn,
    input enable,
    input player_collision,
    output reg [7:0] bullet_x,
    output reg [6:0] bullet_y,
    output reg bullet_active,
    output reg [2:0] bullet_color
);
    // Parameters for screen size
    parameter SCREEN_WIDTH = 160;
    parameter SCREEN_HEIGHT = 120;
    parameter BULLET_SPEED = 2;

    // Bullet properties
    reg [19:0] spawn_counter;
    reg [19:0] bullet_move_counter;

    // Random spawn position for bullet
    wire [7:0] random_x;
    assign random_x = (spawn_counter[7:0] % SCREEN_WIDTH); // Use part of the counter as a pseudo-random number

    // Bullet generation and movement
    always @(posedge CLOCK_50 or negedge resetn) begin
        if (!resetn) begin
            spawn_counter <= 20'd0;
            bullet_x <= 8'd0;
            bullet_y <= 7'd0;
            bullet_active <= 1'b0;
        end else if (enable && !player_collision) begin
            // Spawn bullets at intervals
            if (spawn_counter >= 20'd1_000_000) begin
                spawn_counter <= 20'd0;
                if (!bullet_active) begin
                    bullet_x <= random_x;
                    bullet_y <= 7'd0; // Spawn from top of the screen
                    bullet_active <= 1'b1;
                end
            end else begin
                spawn_counter <= spawn_counter + 1;
            end

            // Bullet movement
            if (bullet_active) begin
                if (bullet_move_counter >= 20'd500_000) begin
                    bullet_move_counter <= 20'd0;
                    if (bullet_y < SCREEN_HEIGHT - BULLET_SPEED) begin
                        bullet_y <= bullet_y + BULLET_SPEED; // Move bullet down the screen
                    end else begin
                        bullet_active <= 1'b0; // Deactivate bullet when it reaches the bottom
                    end
                end else begin
                    bullet_move_counter <= bullet_move_counter + 1;
                end
            end
        end else begin
            // Reset if player is hit or disabled
            bullet_active <= 1'b0;
            bullet_y <= 7'd0;
        end
    end

    // Bullet color
    always @(posedge CLOCK_50 or negedge resetn) begin
        if (!resetn) begin
            bullet_color <= 3'b001; // Initial color, e.g., blue
        end else if (bullet_active) begin
            bullet_color <= 3'b100; // Set color to active, e.g., red
        end else begin
            bullet_color <= 3'b000; // Set to black when not active
        end
    end

endmodule

